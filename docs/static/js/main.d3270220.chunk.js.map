{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","name","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAqB9C,OACE,0BAAMC,SAba,SAACC,GACpBA,EAAEC,iBAGHJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,OAQZ,2BACEO,KAAK,WACLC,KAAK,OACLC,MAAOV,EACPW,YAAY,mCACZC,SAvBmB,SAACT,GACxBF,EAAcE,EAAEU,OAAOH,Y,uBCRdI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAEkEC,UAAUH,GAF5E,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACE,yBAAKc,UAAU,8CAEb,yBAAKC,IAAKf,EAAKgB,IAAI,SACnB,2BAAIN,KCJGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACVa,SAAS,IAH6B,mBAC/BC,EAD+B,KACxBC,EADwB,KAuBxC,OAhBFC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,UASfC,EDrB2BK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,oDAAoDhB,GACjEoB,GAAW,wBAAIJ,UAAU,qCAAd,cAEZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEV3BkB,EAAS,WAAO,IAAD,EACU5C,mBAAS,CAAC,KADpB,mBACnB6C,EADmB,KACP9C,EADO,KAG1B,OACE,6BACE,wBAAIiC,UAAU,UAAd,WACA,kBAAC,EAAD,CAAajC,cAAeA,IAC5B,6BAEA,4BACG8C,EAAWpB,KAAI,SAAAT,GAAQ,OAExB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCX1C8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d3270220.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n\n\n  // Listening to changes \n  const handleInputValue = (e) => {\n    setInputValue(e.target.value);\n  };\n  // props of Giff App to Add more Categories\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n        // Valid  Input\nif(inputValue.trim().length > 2 ){\n    setCategories( cats =>  [inputValue,...cats] )\n    setInputValue('')\n}\n\n}\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name=\"category\"\n        type=\"text\"\n        value={inputValue}\n        placeholder=\"Search your favorites categories\"\n        onChange={handleInputValue}\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = { \n    setCategories : PropTypes.func.isRequired\n}\n","\nexport const getGifs = async (category) => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?api_key=WQfU53tgkPjhEjmHnLEE2OuNbxRJQAcf&q=${encodeURI(category)}&limit=13`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    // console.log(gifs);\n    return gifs\n  };","import React from \"react\";\n\nexport const GifGridItem = ({title, url }) => {\n\n  return (\n    <div className=\"Card animate__animated animate__fadeInDown\">\n        \n      <img src={url} alt=\"Cats\" />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h1 className=\"categories animate__animated animate__fadeInDown\">{category}</h1>\n      {loading && <h4 className=\"animate__animated animate__shakeX\">Loading...</h4>}\n\n      <div className=\"Card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState,useEffect } from \"react\";\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n    loading: true,\n  });\n\n\nuseEffect(() => {\n    getGifs(category)\n    .then(imgs =>{\n        \n\n            setState({\n                data: imgs,\n                loading:false,\n            })\n\n        \n    })\n}) \n\n  \n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./Components/AddCategory\";\nimport { GifGrid } from \"./Components/GifGrid\";\n\nexport const GifApp = () => {\n  const [categories, setCategories] = useState([\"\"]);\n\n  return (\n    <div>\n      <h1 className=\"tittle\">Gif App</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map(category =>  \n        \n        <GifGrid key={category} category={category}/>\n        )}\n        \n      </ol>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifApp} from './GifApp'\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}